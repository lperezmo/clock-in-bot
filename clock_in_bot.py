# -*- coding: utf-8 -*-
"""Clock-in-bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-uq1FYoDQMFY2APJEezI2lnlZH7bPB9x

## Clock in between 6:50-7:03 am
"""

# Import packages and define functions
import schedule
import time
import pyautogui
import numpy as np
import random

def randomTime():
    """Randomize times, skewed towards earlier than 7"""
    # generate time between 6:50 am and 7:03 am
    hours = np.random.choice(a=[6,7],size=1, p=[0.70, 0.30])[0]
    if hours == 6:
        minutes = np.random.randint(50,59)
    if hours == 7:
        minutes = np.random.randint(0, 3)
    time_string = "{:02}:{:02}".format(hours, minutes)
    return time_string

def clock_in():
    # Leave task window open with cursor on enter # id
    # Type employee number, press tab, click enter
    time.sleep(5)
    pyautogui.typewrite(['2', '9', 'x', 'x'], interval=1)
    pyautogui.press('tab')
    time.sleep(1)
    pyautogui.press('enter')
    time.sleep(1)
    pyautogui.press('tab')
    time.sleep(1)
    pyautogui.press('tab')
    time.sleep(1)
    # Take screenshot right before pressing enter
    pyautogui.screenshot('1.png')
    pyautogui.press('enter')
    # Take screenshot after pressing enter to see that right prompt comes up
    pyautogui.screenshot('2.png')
    # Select 'yes' 
    time.sleep(3)
    pyautogui.press('tab')
    # Take screenshot to verify 'yes' is selected
    pyautogui.screenshot('3.png') 
    time.sleep(1)
    pyautogui.press('enter')
    time.sleep(1)
    # Take screenshot at the end to verify task was completed successfully
    pyautogui.screenshot('4.png')

# Generate random times for all week
random_times = []
for i in range(5):
    random_times.append(randomTime())
print(random_times)

# Schedule clock in at generated random times)
schedule.every().monday.at(random_times[0]).do(clock_in)
schedule.every().tuesday.at(random_times[1]).do(clock_in)
schedule.every().wednesday.at(random_times[2]).do(clock_in)
schedule.every().thursday.at(random_times[3]).do(clock_in)
schedule.every().friday.at(random_times[4]).do(clock_in)

while True:
    schedule.run_pending()
    time.sleep(1)

schedule.clear()

